Задание:
Реализовать, с учетом ооп подхода, приложение.
Для проведения исследований с генеалогическим древом.
Идея: описать некоторое количество компонент, например:
модель человека и дерева
Под “проведением исследования” можно понимать например получение всех детей выбранного человека.
Более детальное описание проекта и как его реализовать обсуждали в конце семинара

Задание 2
В проекте с гениалогическим древом подумайте и используйте интерфейсы.
Дополнить проект методами записи в файл и чтения из файла. Для этого создать отдельный класс и реализовать в нем нужные методы. Для данного класса сделайте интерфейс, который и используйте в своей программе. Пример работы с интерфейсом Serialazable можно найти в материалах к уроку.
Поправить замечания к первому уроку.

Идея такова что степень родства указывается при вводе с консоли: Дед такого то человека, Внучка такого то человека и тд.
Пересматриваю семинары, пока не понял как по другому реализовать.

Задание 3
Продолжаем работать с проектом с семейным деревом.
Реализовать интерфейс Iterable для дерева.
Создать методы сортировки списка людей перед выводом, например по имени или по дате рождения (не менее 2)
Создать пакетную структуру для проекта.

Удалил лишние классы.


"Сохранять лучше весь объект целиком, а не только отдельно лист людей. 
Например в объекте дерева могла быть информация о названии данной династии 
и вы это потеряете либо руками придется дописывать. В остальном все верно"

Не пойму как сохранть весь объект целиком? 


Описание работы приложения:
Создал интерактивное меню, где пользователь может выбирать что ему надо сделать. 
    Пользователь может выбрать:
        1) Ввод с консоли данных о людях (ФИО, пол, дата рождения и степень родства). Ввод данных о детях этих людей. 
        После ввода вся информация сохраняется в файл genealogy.dat. 
        2) Поиск информации о человеке по имени и фамилии.
        3) Выбор метода сортировки: 
            а) По имени.
            б) По дате рождения.